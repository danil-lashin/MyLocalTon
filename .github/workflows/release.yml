name: Create release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - arm64-aarch64
      - test-release-2

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn package -DskipTests

      - name: Prepare JAR artifact
        run: |
          mkdir MyLocalTonJar && cp target/MyLocalTon.jar MyLocalTon/MyLocalTon-x86-64.jar

      - name: Prepare Ubuntu executable artifact
        run: |
          mkdir MyLocalTonLinux && cp target/MyLocalTon.jar MyLocalTonLinux/MyLocalTon.jar
          cd MyLocalTonLinux
          echo "java -jar" > MyLocalTon-x86-64
          echo MyLocalTon.jar >> MyLocalTon-x86-64
          rm MyLocalTon.jar

      - name: Prepare Windows artifact
        run: |
          mkdir MyLocalTonWindows && cp target/MyLocalTon.jar MyLocalTonWindows/MyLocalTon.jar
          cd MyLocalTonWindows
          wget https://sourceforge.net/projects/launch4j/files/launch4j-3/3.14/launch4j-3.14-linux-x64.tgz
          tar -xvf launch4j-3.14-linux-x64.tgz
          cd launch4j
          pwd
          ./launch4jc ../.github/workflows/win.xml
          cd ..
          rm -rf launch4*


      - uses: actions/upload-artifact@v2
        with:
          name: MyLocalTon JAR file
          path: MyLocalTonJar

      - uses: actions/upload-artifact@v2
        with:
          name: MyLocalTon Ubuntu executable
          path: MyLocalTonLinux

      - uses: actions/upload-artifact@v2
        with:
          name: MyLocalTon Windows executable
          path: MyLocalTonWindows

      - name: Read CHANGELOG.md and use it as a body of new release
        id: read_release
        shell: bash
        run: |
          r=$(cat CHANGELOG.md)
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"
          echo "::set-output name=CHANGELOG_BODY::$r"

      - name: Get the current branch name
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: myref

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}-${{ steps.myref.outputs.branch }}
          release_name: MyLocalTon v${{ github.run_number }}-${{ steps.myref.outputs.branch }}
          body: |
            ${{ steps.read_release.outputs.CHANGELOG_BODY }}
          draft: false
          prerelease: true

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/MyLocalTon.jar
          asset_name: MyLocalTon.jar
          tag: v${{ github.run_number }}-${{ steps.myref.outputs.branch }}
          overwrite: true
