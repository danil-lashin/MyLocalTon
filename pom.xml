<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.ton</groupId>
    <artifactId>MyLocalTon</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>11</java.version>
        <maven.compiler.release>11</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <apache.commons.lang3.version>3.9</apache.commons.lang3.version>
        <openjfx.version>21</openjfx.version>
        <jfoenix.version>9.0.4</jfoenix.version>
        <commons-io.version>2.7</commons-io.version>
        <commons-codec.version>1.14</commons-codec.version>
        <lombok.version>1.18.22</lombok.version>
        <jupiter.version>5.7.1</jupiter.version>
        <junit.version>4.13.2</junit.version>
        <assertj.version>3.19.0</assertj.version>
        <concurrent-junit.version>1.0.2</concurrent-junit.version>
        <gson.version>2.8.6</gson.version>
        <logback.version>1.2.9</logback.version>
        <zip4j.version>2.10.0</zip4j.version>
        <jetty.version>11.0.14</jetty.version>
        <linux.amd64.ton.binaries.uri>
            https://cicd.neodix.io/view/TON%20master%20binaries/job/TON_Linux_x86-64/lastSuccessfulBuild/artifact/artifacts/binaries/*zip*/binaries.zip
        </linux.amd64.ton.binaries.uri>
        <linux.arm64.ton.binaries.uri>
            https://cicd.neodix.io/view/TON%20master%20binaries/job/TON_Linux_arm64/lastSuccessfulBuild/artifact/artifacts/binaries/*zip*/binaries.zip
        </linux.arm64.ton.binaries.uri>
        <mac.arm64.ton.binaries.uri>
            https://cicd.neodix.io/view/TON%20master%20binaries/job/TON_macOS_aarch64_arm64_master/lastSuccessfulBuild/artifact/artifacts/binaries/*zip*/binaries.zip
        </mac.arm64.ton.binaries.uri>
        <mac.amd64.ton.binaries.uri>
            https://cicd.neodix.io/view/TON%20master%20binaries/job/TON_macOS_x86-64_master/lastSuccessfulBuild/artifact/artifacts/binaries/*zip*/binaries.zip
        </mac.amd64.ton.binaries.uri>
        <win.amd64.ton.binaries.uri>
            https://cicd.neodix.io/view/TON%20master%20binaries/job/TON_Windows_x86-64_master/lastSuccessfulBuild/artifact/artifacts/*zip*/artifacts.zip
        </win.amd64.ton.binaries.uri>
    </properties>

    <repositories>
        <repository>
            <id>objectdb</id>
            <name>ObjectDB Repository</name>
            <url>https://m2.objectdb.com</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>io.github.neodix42</groupId>
            <artifactId>smartcontract</artifactId>
            <version>0.1.4</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${openjfx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${openjfx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${openjfx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.fxmisc.richtext</groupId>
            <artifactId>richtextfx</artifactId>
            <version>0.10.7</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${openjfx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${openjfx.version}</version>
            <classifier>linux-aarch64</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${openjfx.version}</version>
            <classifier>mac-aarch64</classifier>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${openjfx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${openjfx.version}</version>
            <classifier>linux-aarch64</classifier>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${openjfx.version}</version>
            <classifier>mac-aarch64</classifier>
        </dependency>

        <dependency>
            <groupId>com.jfoenix</groupId>
            <artifactId>jfoenix</artifactId>
            <version>${jfoenix.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fifesoft</groupId>
            <artifactId>rsyntaxtextarea</artifactId>
            <version>3.1.3</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.commons.lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>com.vmlens</groupId>
            <artifactId>concurrent-junit</artifactId>
            <version>${concurrent-junit.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.17.1</version>
        </dependency>
        <dependency>
            <groupId>net.lingala.zip4j</groupId>
            <artifactId>zip4j</artifactId>
            <version>${zip4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <!--
                <dependency>
                    <groupId>de.jensd</groupId>
                    <artifactId>fontawesomefx-commons</artifactId>
                    <version>9.1.2</version>
                    <scope>runtime</scope>
                </dependency>

                <dependency>
                    <groupId>de.jensd</groupId>
                    <artifactId>fontawesomefx-materialicons</artifactId>
                    <version>2.2.0-9.1.2</version>
                </dependency>
        -->

        <!-- database -->
        <dependency>
            <groupId>com.objectdb</groupId>
            <artifactId>objectdb</artifactId>
            <version>2.8.6</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>javax.persistence</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.1.0</version>
            <type>maven-plugin</type>
        </dependency>
        <dependency>
            <groupId>org.jprocesses</groupId>
            <artifactId>jProcesses</artifactId>
            <version>1.6.5</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <options>
                        <option>--add-opens</option>
                        <option>javafx.graphics/javafx.css=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/com.sun.javafx.runtime=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/com.sun.javafx.binding=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.controls/com.sun.javafx.scene.control.behavior=com.jfoenix</option>
                        <option>--add-exports</option>
                        <option>javafx.controls/com.sun.javafx.scene.control=com.jfoenix</option>
                        <option>--add-exports</option>
                        <option>javafx.base/com.sun.javafx.binding=com.jfoenix</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.javafx.stage=com.jfoenix</option>
                        <option>--add-exports</option>
                        <option>javafx.base/com.sun.javafx.scene=com.jfoenix</option>
                    </options>
                    <mainClass>org.ton.main.App</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <!-- Default configuration for running -->
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>org.ton.main.App</mainClass>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Configuration for debugging, use as >mvn clean javafx:run@debug -->
                        <id>debug</id>
                        <configuration>
                            <options>
                                <option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:8000</option>
                            </options>
                            <mainClass>org.ton.main.App</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>myLocalTon</directory>
                        </fileset>
                        <fileset>
                            <directory>testDB</directory>
                        </fileset>
                        <fileset>
                            <directory>${basedir}/src/main/resources/</directory>
                            <includes>
                                <include>*tonlibjson*</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>${basedir}/src/main/resources/org/ton/binaries/</directory>
                            <includes>
                                <include>*ton-linux*</include>
                                <include>*ton-mac*</include>
                                <include>*ton-win*</include>
                            </includes>
                        </fileset>


                    </filesets>

                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>MyLocalTon</finalName>

                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.ton.main.Main</mainClass>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                                </transformer>
                            </transformers>

                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.7.1</version>
                <executions>
                    <execution>
                        <id>ton-linux-x86_64</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <skipCache>true</skipCache>
                            <uri>
                                ${linux.amd64.ton.binaries.uri}
                            </uri>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/binaries-linux-x86_64</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ton-linux-arm64</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <skipCache>true</skipCache>
                            <uri>${linux.arm64.ton.binaries.uri}</uri>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/binaries-linux-arm64</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ton-mac-arm64</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <skipCache>true</skipCache>
                            <uri>${mac.arm64.ton.binaries.uri}</uri>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/binaries-mac-arm64</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ton-mac-x86_64</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <skipCache>true</skipCache>
                            <uri>${mac.amd64.ton.binaries.uri}</uri>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/binaries-mac-x86_64</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ton-win-x86_64</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <skipCache>true</skipCache>
                            <uri>${win.amd64.ton.binaries.uri}</uri>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/binaries-windows-x86_64</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-smartcont-auto_to_binaries</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/binaries-mac-x86_64/binaries/smartcont/auto"/>
                                <mkdir dir="${project.build.directory}/binaries-mac-arm64/binaries/smartcont/auto"/>
                                <mkdir dir="${project.build.directory}/binaries-linux-arm64/binaries/smartcont/auto"/>
                                <mkdir dir="${project.build.directory}/binaries-linux-x86_64/binaries/smartcont/auto"/>

                                <copy todir="${project.build.directory}/binaries-mac-x86_64/binaries/smartcont/auto">
                                    <fileset
                                            dir="${project.build.directory}/binaries-windows-x86_64/artifacts/smartcont/auto"
                                            includes="**/*"/>
                                </copy>
                                <copy todir="${project.build.directory}/binaries-mac-arm64/binaries/smartcont/auto">
                                    <fileset
                                            dir="${project.build.directory}/binaries-windows-x86_64/artifacts/smartcont/auto"
                                            includes="**/*"/>
                                </copy>
                                <copy todir="${project.build.directory}/binaries-linux-arm64/binaries/smartcont/auto">
                                    <fileset
                                            dir="${project.build.directory}/binaries-windows-x86_64/artifacts/smartcont/auto"
                                            includes="**/*"/>
                                </copy>
                                <copy todir="${project.build.directory}/binaries-linux-x86_64/binaries/smartcont/auto">
                                    <fileset
                                            dir="${project.build.directory}/binaries-windows-x86_64/artifacts/smartcont/auto"
                                            includes="**/*"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-final-ton-linux-x86_64_to_resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy todir="${basedir}/src/main/resources/org/ton/binaries">
                                    <fileset
                                            dir="${project.build.directory}" includes="ton-linux-x86_64.zip"/>
                                </copy>
                                <copy file="${project.build.directory}/binaries-linux-arm64/binaries/libtonlibjson.so.0.5"
                                      tofile="${basedir}/src/main/resources/tonlibjson.so"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-final-ton-linux-arm64_to_resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy todir="${basedir}/src/main/resources/org/ton/binaries">
                                    <fileset
                                            dir="${project.build.directory}" includes="ton-linux-arm64.zip"/>
                                </copy>
                                <copy file="${project.build.directory}/binaries-linux-arm64/binaries/libtonlibjson.so.0.5"
                                      tofile="${basedir}/src/main/resources/tonlibjson-arm.so"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-final-ton-mac-x86_64_to_resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy todir="${basedir}/src/main/resources/org/ton/binaries">
                                    <fileset
                                            dir="${project.build.directory}" includes="ton-mac-x86_64.zip"/>
                                </copy>
                                <copy file="${project.build.directory}/binaries-mac-arm64/binaries/libtonlibjson.0.5.dylib"
                                      tofile="${basedir}/src/main/resources/libtonlibjson.dylib"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-final-ton-mac-arm64_to_resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy todir="${basedir}/src/main/resources/org/ton/binaries">
                                    <fileset
                                            dir="${project.build.directory}" includes="ton-mac-arm64.zip"/>
                                </copy>
                                <copy file="${project.build.directory}/binaries-mac-arm64/binaries/libtonlibjson.0.5.dylib"
                                      tofile="${basedir}/src/main/resources/libtonlibjson-arm.dylib"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-final-ton-win-x86_64_to_resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy todir="${basedir}/src/main/resources/org/ton/binaries">
                                    <fileset dir="${project.build.directory}" includes="ton-win-x86_64.zip"/>
                                </copy>
                                <copy file="${project.build.directory}/binaries-windows-x86_64/artifacts/tonlibjson.dll"
                                      tofile="${basedir}/src/main/resources/tonlibjson.dll"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>create-final-linux-arm64-binary-package</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>ton-linux-arm64</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/assembly/linux-arm64.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-final-linux-x86_64-binary-package</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>ton-linux-x86_64</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/assembly/linux-x86_64.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-final-mac-x86_64-binary-package</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>ton-mac-x86_64</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/assembly/mac-x86_64.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-final-mac-arm64-binary-package</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>ton-mac-arm64</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/assembly/mac-arm64.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-final-win-x86_64-binary-package</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>ton-win-x86_64</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/assembly/win-x86_64.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>